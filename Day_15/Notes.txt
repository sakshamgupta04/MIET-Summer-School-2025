Sorting:
    Arranging elements in increasing or decreasing order is called Sorting.
        1. Selection sort:
            Algorithm:
                - Start from the first element.
                - Find the smallest element in the unsorted part of the array
                - Swap it with the first element of the unsorted part
                - Move the boundary of the sorted part by one
                - Repeat until the entire array is sorted.
            Time Complexity:
                - Best Case: O( n^2 )
                - Avg Case: O( n^2 )
                - Worst Case: O( n^2 )
    
        2. Bubble Sort:
            Algorithm:
                - Start from the first element
                - Compare each pair of adjacent elements
                - If the left element is greater , swap them
                - Repeat the process for all elements
                - After each pass,, the largest element bubbles to the end
                - Continue for n-1 passes or until no swaps are needed.
            Time complexity:
                - Best Case: O( n )
                - Avg Case: O( n^2 )
                - Worst Case O( n^2 )

        3. Insertion Sort:
            Insertion Sort is a simple comparison-based sorting algorithm.
            It build the final sorted array one element at a time, just like how you sort card in your hand.
            Algorithm:
                - Start from the second element (index 1).
                - Compare it with the element before it.
                - Shift the larger elements one position
                - Insert the current element at its correct position
            Complexity:
                - Best Case: O( n )
                - Avg Case: O( n^2 )
                - Worst Case: O( n^2 )